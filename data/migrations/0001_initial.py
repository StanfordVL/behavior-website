# Generated by Django 4.2 on 2023-04-26 21:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "name",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Object",
            fields=[
                (
                    "name",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
                ("ready", models.BooleanField(default=False)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, upload_to="", verbose_name="Object photo"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.category"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Scene",
            fields=[
                (
                    "name",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Synset",
            fields=[
                (
                    "name",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
                ("definition", models.CharField(default="", max_length=1000)),
                ("is_substance", models.BooleanField(default=False)),
                ("children", models.ManyToManyField(blank=True, to="data.synset")),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "name",
                    models.CharField(max_length=64, primary_key=True, serialize=False),
                ),
                ("synsets", models.ManyToManyField(to="data.synset")),
            ],
        ),
        migrations.CreateModel(
            name="RoomRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("bar", "bar"),
                            ("bathroom", "bathroom"),
                            ("bedroom", "bedroom"),
                            ("biology lab", "biology_lab"),
                            ("break room", "break_room"),
                            ("chemistry lab", "chemistry_lab"),
                            ("classroom", "classroom"),
                            ("computer lab", "computer_lab"),
                            ("conference hall", "conference_hall"),
                            ("copy room", "copy_room"),
                            ("corridor", "corridor"),
                            ("dining room", "dining_room"),
                            ("empty room", "empty_room"),
                            ("grocery store", "grocery_store"),
                            ("gym", "gym"),
                            ("hammam", "hammam"),
                            ("infirmary", "infirmary"),
                            ("kitchen", "kitchen"),
                            ("lobby", "lobby"),
                            ("locker room", "locker_room"),
                            ("meeting room", "meeting_room"),
                            ("phone room", "phone_room"),
                            ("private office", "private_office"),
                            ("sauna", "sauna"),
                            ("shared office", "shared_office"),
                            ("spa", "spa"),
                            ("entryway", "entryway"),
                            ("television room", "television_room"),
                            ("utility room", "utility_room"),
                            ("garage", "garage"),
                            ("closet", "closet"),
                            ("childs room", "childs_room"),
                            ("exercise room", "exercise_room"),
                            ("garden", "garden"),
                            ("living room", "living_room"),
                            ("pantry room", "pantry_room"),
                            ("playroom", "playroom"),
                            ("staircase", "staircase"),
                            ("storage room", "storage_room"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.task"
                    ),
                ),
            ],
            options={
                "unique_together": {("task", "type")},
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("bar", "bar"),
                            ("bathroom", "bathroom"),
                            ("bedroom", "bedroom"),
                            ("biology lab", "biology_lab"),
                            ("break room", "break_room"),
                            ("chemistry lab", "chemistry_lab"),
                            ("classroom", "classroom"),
                            ("computer lab", "computer_lab"),
                            ("conference hall", "conference_hall"),
                            ("copy room", "copy_room"),
                            ("corridor", "corridor"),
                            ("dining room", "dining_room"),
                            ("empty room", "empty_room"),
                            ("grocery store", "grocery_store"),
                            ("gym", "gym"),
                            ("hammam", "hammam"),
                            ("infirmary", "infirmary"),
                            ("kitchen", "kitchen"),
                            ("lobby", "lobby"),
                            ("locker room", "locker_room"),
                            ("meeting room", "meeting_room"),
                            ("phone room", "phone_room"),
                            ("private office", "private_office"),
                            ("sauna", "sauna"),
                            ("shared office", "shared_office"),
                            ("spa", "spa"),
                            ("entryway", "entryway"),
                            ("television room", "television_room"),
                            ("utility room", "utility_room"),
                            ("garage", "garage"),
                            ("closet", "closet"),
                            ("childs room", "childs_room"),
                            ("exercise room", "exercise_room"),
                            ("garden", "garden"),
                            ("living room", "living_room"),
                            ("pantry room", "pantry_room"),
                            ("playroom", "playroom"),
                            ("staircase", "staircase"),
                            ("storage room", "storage_room"),
                        ],
                        max_length=64,
                    ),
                ),
                ("ready", models.BooleanField(default=False)),
                (
                    "scene",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.scene"
                    ),
                ),
            ],
            options={
                "unique_together": {("name", "ready", "scene")},
            },
        ),
        migrations.AddField(
            model_name="category",
            name="synset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="data.synset"
            ),
        ),
        migrations.CreateModel(
            name="RoomSynsetRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.IntegerField()),
                (
                    "room_requirement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.roomrequirement",
                    ),
                ),
                (
                    "synset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.synset"
                    ),
                ),
            ],
            options={
                "unique_together": {("room_requirement", "synset")},
            },
        ),
        migrations.CreateModel(
            name="RoomObject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("count", models.IntegerField()),
                (
                    "object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.object"
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.room"
                    ),
                ),
            ],
            options={
                "unique_together": {("room", "object")},
            },
        ),
    ]
